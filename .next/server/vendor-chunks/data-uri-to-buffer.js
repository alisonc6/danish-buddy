"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/data-uri-to-buffer";
exports.ids = ["vendor-chunks/data-uri-to-buffer"];
exports.modules = {

/***/ "(rsc)/./node_modules/data-uri-to-buffer/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/data-uri-to-buffer/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataUriToBuffer: () => (/* binding */ dataUriToBuffer),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * Returns a `Buffer` instance from the given data URI `uri`.\r\n *\r\n * @param {String} uri Data URI to turn into a Buffer instance\r\n * @returns {Buffer} Buffer instance from Data URI\r\n * @api public\r\n */\r\nfunction dataUriToBuffer(uri) {\r\n    if (!/^data:/i.test(uri)) {\r\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\r\n    }\r\n    // strip newlines\r\n    uri = uri.replace(/\\r?\\n/g, '');\r\n    // split the URI up into the \"metadata\" and the \"data\" portions\r\n    const firstComma = uri.indexOf(',');\r\n    if (firstComma === -1 || firstComma <= 4) {\r\n        throw new TypeError('malformed data: URI');\r\n    }\r\n    // remove the \"data:\" scheme and parse the metadata\r\n    const meta = uri.substring(5, firstComma).split(';');\r\n    let charset = '';\r\n    let base64 = false;\r\n    const type = meta[0] || 'text/plain';\r\n    let typeFull = type;\r\n    for (let i = 1; i < meta.length; i++) {\r\n        if (meta[i] === 'base64') {\r\n            base64 = true;\r\n        }\r\n        else if (meta[i]) {\r\n            typeFull += `;${meta[i]}`;\r\n            if (meta[i].indexOf('charset=') === 0) {\r\n                charset = meta[i].substring(8);\r\n            }\r\n        }\r\n    }\r\n    // defaults to US-ASCII only if type is not provided\r\n    if (!meta[0] && !charset.length) {\r\n        typeFull += ';charset=US-ASCII';\r\n        charset = 'US-ASCII';\r\n    }\r\n    // get the encoded data portion and decode URI-encoded chars\r\n    const encoding = base64 ? 'base64' : 'ascii';\r\n    const data = unescape(uri.substring(firstComma + 1));\r\n    const buffer = Buffer.from(data, encoding);\r\n    // set `.type` and `.typeFull` properties to MIME type\r\n    buffer.type = type;\r\n    buffer.typeFull = typeFull;\r\n    // set the `.charset` property\r\n    buffer.charset = charset;\r\n    return buffer;\r\n}\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dataUriToBuffer);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZGF0YS11cmktdG8tYnVmZmVyL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEVBQUUsUUFBUTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGVBQWUsRUFBQztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmlzaC1idWRkeS8uL25vZGVfbW9kdWxlcy9kYXRhLXVyaS10by1idWZmZXIvZGlzdC9pbmRleC5qcz9jYjEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBSZXR1cm5zIGEgYEJ1ZmZlcmAgaW5zdGFuY2UgZnJvbSB0aGUgZ2l2ZW4gZGF0YSBVUkkgYHVyaWAuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmkgRGF0YSBVUkkgdG8gdHVybiBpbnRvIGEgQnVmZmVyIGluc3RhbmNlXHJcbiAqIEByZXR1cm5zIHtCdWZmZXJ9IEJ1ZmZlciBpbnN0YW5jZSBmcm9tIERhdGEgVVJJXHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGF0YVVyaVRvQnVmZmVyKHVyaSkge1xyXG4gICAgaWYgKCEvXmRhdGE6L2kudGVzdCh1cmkpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYHVyaWAgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGEgRGF0YSBVUkkgKG11c3QgYmVnaW4gd2l0aCBcImRhdGE6XCIpJyk7XHJcbiAgICB9XHJcbiAgICAvLyBzdHJpcCBuZXdsaW5lc1xyXG4gICAgdXJpID0gdXJpLnJlcGxhY2UoL1xccj9cXG4vZywgJycpO1xyXG4gICAgLy8gc3BsaXQgdGhlIFVSSSB1cCBpbnRvIHRoZSBcIm1ldGFkYXRhXCIgYW5kIHRoZSBcImRhdGFcIiBwb3J0aW9uc1xyXG4gICAgY29uc3QgZmlyc3RDb21tYSA9IHVyaS5pbmRleE9mKCcsJyk7XHJcbiAgICBpZiAoZmlyc3RDb21tYSA9PT0gLTEgfHwgZmlyc3RDb21tYSA8PSA0KSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbWFsZm9ybWVkIGRhdGE6IFVSSScpO1xyXG4gICAgfVxyXG4gICAgLy8gcmVtb3ZlIHRoZSBcImRhdGE6XCIgc2NoZW1lIGFuZCBwYXJzZSB0aGUgbWV0YWRhdGFcclxuICAgIGNvbnN0IG1ldGEgPSB1cmkuc3Vic3RyaW5nKDUsIGZpcnN0Q29tbWEpLnNwbGl0KCc7Jyk7XHJcbiAgICBsZXQgY2hhcnNldCA9ICcnO1xyXG4gICAgbGV0IGJhc2U2NCA9IGZhbHNlO1xyXG4gICAgY29uc3QgdHlwZSA9IG1ldGFbMF0gfHwgJ3RleHQvcGxhaW4nO1xyXG4gICAgbGV0IHR5cGVGdWxsID0gdHlwZTtcclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgbWV0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChtZXRhW2ldID09PSAnYmFzZTY0Jykge1xyXG4gICAgICAgICAgICBiYXNlNjQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChtZXRhW2ldKSB7XHJcbiAgICAgICAgICAgIHR5cGVGdWxsICs9IGA7JHttZXRhW2ldfWA7XHJcbiAgICAgICAgICAgIGlmIChtZXRhW2ldLmluZGV4T2YoJ2NoYXJzZXQ9JykgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIGNoYXJzZXQgPSBtZXRhW2ldLnN1YnN0cmluZyg4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIGRlZmF1bHRzIHRvIFVTLUFTQ0lJIG9ubHkgaWYgdHlwZSBpcyBub3QgcHJvdmlkZWRcclxuICAgIGlmICghbWV0YVswXSAmJiAhY2hhcnNldC5sZW5ndGgpIHtcclxuICAgICAgICB0eXBlRnVsbCArPSAnO2NoYXJzZXQ9VVMtQVNDSUknO1xyXG4gICAgICAgIGNoYXJzZXQgPSAnVVMtQVNDSUknO1xyXG4gICAgfVxyXG4gICAgLy8gZ2V0IHRoZSBlbmNvZGVkIGRhdGEgcG9ydGlvbiBhbmQgZGVjb2RlIFVSSS1lbmNvZGVkIGNoYXJzXHJcbiAgICBjb25zdCBlbmNvZGluZyA9IGJhc2U2NCA/ICdiYXNlNjQnIDogJ2FzY2lpJztcclxuICAgIGNvbnN0IGRhdGEgPSB1bmVzY2FwZSh1cmkuc3Vic3RyaW5nKGZpcnN0Q29tbWEgKyAxKSk7XHJcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShkYXRhLCBlbmNvZGluZyk7XHJcbiAgICAvLyBzZXQgYC50eXBlYCBhbmQgYC50eXBlRnVsbGAgcHJvcGVydGllcyB0byBNSU1FIHR5cGVcclxuICAgIGJ1ZmZlci50eXBlID0gdHlwZTtcclxuICAgIGJ1ZmZlci50eXBlRnVsbCA9IHR5cGVGdWxsO1xyXG4gICAgLy8gc2V0IHRoZSBgLmNoYXJzZXRgIHByb3BlcnR5XHJcbiAgICBidWZmZXIuY2hhcnNldCA9IGNoYXJzZXQ7XHJcbiAgICByZXR1cm4gYnVmZmVyO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGRhdGFVcmlUb0J1ZmZlcjtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/data-uri-to-buffer/dist/index.js\n");

/***/ })

};
;