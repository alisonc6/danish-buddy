"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/agent-base";
exports.ids = ["vendor-chunks/agent-base"];
exports.modules = {

/***/ "(rsc)/./node_modules/agent-base/dist/helpers.js":
/*!*************************************************!*\
  !*** ./node_modules/agent-base/dist/helpers.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.req = exports.json = exports.toBuffer = void 0;\r\nconst http = __importStar(__webpack_require__(/*! http */ \"http\"));\r\nconst https = __importStar(__webpack_require__(/*! https */ \"https\"));\r\nasync function toBuffer(stream) {\r\n    let length = 0;\r\n    const chunks = [];\r\n    for await (const chunk of stream) {\r\n        length += chunk.length;\r\n        chunks.push(chunk);\r\n    }\r\n    return Buffer.concat(chunks, length);\r\n}\r\nexports.toBuffer = toBuffer;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nasync function json(stream) {\r\n    const buf = await toBuffer(stream);\r\n    const str = buf.toString('utf8');\r\n    try {\r\n        return JSON.parse(str);\r\n    }\r\n    catch (_err) {\r\n        const err = _err;\r\n        err.message += ` (input: ${str})`;\r\n        throw err;\r\n    }\r\n}\r\nexports.json = json;\r\nfunction req(url, opts = {}) {\r\n    const href = typeof url === 'string' ? url : url.href;\r\n    const req = (href.startsWith('https:') ? https : http).request(url, opts);\r\n    const promise = new Promise((resolve, reject) => {\r\n        req\r\n            .once('response', resolve)\r\n            .once('error', reject)\r\n            .end();\r\n    });\r\n    req.then = promise.then.bind(promise);\r\n    return req;\r\n}\r\nexports.req = req;\r\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYWdlbnQtYmFzZS9kaXN0L2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFdBQVcsR0FBRyxZQUFZLEdBQUcsZ0JBQWdCO0FBQzdDLDBCQUEwQixtQkFBTyxDQUFDLGtCQUFNO0FBQ3hDLDJCQUEyQixtQkFBTyxDQUFDLG9CQUFPO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsSUFBSTtBQUN2QztBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmlzaC1idWRkeS8uL25vZGVfbW9kdWxlcy9hZ2VudC1iYXNlL2Rpc3QvaGVscGVycy5qcz82MDAxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xyXG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcclxuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xyXG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcclxuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcclxufSk7XHJcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcclxuICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcclxuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMucmVxID0gZXhwb3J0cy5qc29uID0gZXhwb3J0cy50b0J1ZmZlciA9IHZvaWQgMDtcclxuY29uc3QgaHR0cCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiaHR0cFwiKSk7XHJcbmNvbnN0IGh0dHBzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJodHRwc1wiKSk7XHJcbmFzeW5jIGZ1bmN0aW9uIHRvQnVmZmVyKHN0cmVhbSkge1xyXG4gICAgbGV0IGxlbmd0aCA9IDA7XHJcbiAgICBjb25zdCBjaHVua3MgPSBbXTtcclxuICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2Ygc3RyZWFtKSB7XHJcbiAgICAgICAgbGVuZ3RoICs9IGNodW5rLmxlbmd0aDtcclxuICAgICAgICBjaHVua3MucHVzaChjaHVuayk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gQnVmZmVyLmNvbmNhdChjaHVua3MsIGxlbmd0aCk7XHJcbn1cclxuZXhwb3J0cy50b0J1ZmZlciA9IHRvQnVmZmVyO1xyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG5hc3luYyBmdW5jdGlvbiBqc29uKHN0cmVhbSkge1xyXG4gICAgY29uc3QgYnVmID0gYXdhaXQgdG9CdWZmZXIoc3RyZWFtKTtcclxuICAgIGNvbnN0IHN0ciA9IGJ1Zi50b1N0cmluZygndXRmOCcpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShzdHIpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKF9lcnIpIHtcclxuICAgICAgICBjb25zdCBlcnIgPSBfZXJyO1xyXG4gICAgICAgIGVyci5tZXNzYWdlICs9IGAgKGlucHV0OiAke3N0cn0pYDtcclxuICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5qc29uID0ganNvbjtcclxuZnVuY3Rpb24gcmVxKHVybCwgb3B0cyA9IHt9KSB7XHJcbiAgICBjb25zdCBocmVmID0gdHlwZW9mIHVybCA9PT0gJ3N0cmluZycgPyB1cmwgOiB1cmwuaHJlZjtcclxuICAgIGNvbnN0IHJlcSA9IChocmVmLnN0YXJ0c1dpdGgoJ2h0dHBzOicpID8gaHR0cHMgOiBodHRwKS5yZXF1ZXN0KHVybCwgb3B0cyk7XHJcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIHJlcVxyXG4gICAgICAgICAgICAub25jZSgncmVzcG9uc2UnLCByZXNvbHZlKVxyXG4gICAgICAgICAgICAub25jZSgnZXJyb3InLCByZWplY3QpXHJcbiAgICAgICAgICAgIC5lbmQoKTtcclxuICAgIH0pO1xyXG4gICAgcmVxLnRoZW4gPSBwcm9taXNlLnRoZW4uYmluZChwcm9taXNlKTtcclxuICAgIHJldHVybiByZXE7XHJcbn1cclxuZXhwb3J0cy5yZXEgPSByZXE7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/agent-base/dist/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/agent-base/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/agent-base/dist/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Agent = void 0;\r\nconst net = __importStar(__webpack_require__(/*! net */ \"net\"));\r\nconst http = __importStar(__webpack_require__(/*! http */ \"http\"));\r\nconst https_1 = __webpack_require__(/*! https */ \"https\");\r\n__exportStar(__webpack_require__(/*! ./helpers */ \"(rsc)/./node_modules/agent-base/dist/helpers.js\"), exports);\r\nconst INTERNAL = Symbol('AgentBaseInternalState');\r\nclass Agent extends http.Agent {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this[INTERNAL] = {};\r\n    }\r\n    /**\r\n     * Determine whether this is an `http` or `https` request.\r\n     */\r\n    isSecureEndpoint(options) {\r\n        if (options) {\r\n            // First check the `secureEndpoint` property explicitly, since this\r\n            // means that a parent `Agent` is \"passing through\" to this instance.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (typeof options.secureEndpoint === 'boolean') {\r\n                return options.secureEndpoint;\r\n            }\r\n            // If no explicit `secure` endpoint, check if `protocol` property is\r\n            // set. This will usually be the case since using a full string URL\r\n            // or `URL` instance should be the most common usage.\r\n            if (typeof options.protocol === 'string') {\r\n                return options.protocol === 'https:';\r\n            }\r\n        }\r\n        // Finally, if no `protocol` property was set, then fall back to\r\n        // checking the stack trace of the current call stack, and try to\r\n        // detect the \"https\" module.\r\n        const { stack } = new Error();\r\n        if (typeof stack !== 'string')\r\n            return false;\r\n        return stack\r\n            .split('\\n')\r\n            .some((l) => l.indexOf('(https.js:') !== -1 ||\r\n            l.indexOf('node:https:') !== -1);\r\n    }\r\n    // In order to support async signatures in `connect()` and Node's native\r\n    // connection pooling in `http.Agent`, the array of sockets for each origin\r\n    // has to be updated synchronously. This is so the length of the array is\r\n    // accurate when `addRequest()` is next called. We achieve this by creating a\r\n    // fake socket and adding it to `sockets[origin]` and incrementing\r\n    // `totalSocketCount`.\r\n    incrementSockets(name) {\r\n        // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\r\n        // need to create a fake socket because Node.js native connection pooling\r\n        // will never be invoked.\r\n        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {\r\n            return null;\r\n        }\r\n        // All instances of `sockets` are expected TypeScript errors. The\r\n        // alternative is to add it as a private property of this class but that\r\n        // will break TypeScript subclassing.\r\n        if (!this.sockets[name]) {\r\n            // @ts-expect-error `sockets` is readonly in `@types/node`\r\n            this.sockets[name] = [];\r\n        }\r\n        const fakeSocket = new net.Socket({ writable: false });\r\n        this.sockets[name].push(fakeSocket);\r\n        // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\r\n        this.totalSocketCount++;\r\n        return fakeSocket;\r\n    }\r\n    decrementSockets(name, socket) {\r\n        if (!this.sockets[name] || socket === null) {\r\n            return;\r\n        }\r\n        const sockets = this.sockets[name];\r\n        const index = sockets.indexOf(socket);\r\n        if (index !== -1) {\r\n            sockets.splice(index, 1);\r\n            // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\r\n            this.totalSocketCount--;\r\n            if (sockets.length === 0) {\r\n                // @ts-expect-error `sockets` is readonly in `@types/node`\r\n                delete this.sockets[name];\r\n            }\r\n        }\r\n    }\r\n    // In order to properly update the socket pool, we need to call `getName()` on\r\n    // the core `https.Agent` if it is a secureEndpoint.\r\n    getName(options) {\r\n        const secureEndpoint = typeof options.secureEndpoint === 'boolean'\r\n            ? options.secureEndpoint\r\n            : this.isSecureEndpoint(options);\r\n        if (secureEndpoint) {\r\n            // @ts-expect-error `getName()` isn't defined in `@types/node`\r\n            return https_1.Agent.prototype.getName.call(this, options);\r\n        }\r\n        // @ts-expect-error `getName()` isn't defined in `@types/node`\r\n        return super.getName(options);\r\n    }\r\n    createSocket(req, options, cb) {\r\n        const connectOpts = {\r\n            ...options,\r\n            secureEndpoint: this.isSecureEndpoint(options),\r\n        };\r\n        const name = this.getName(connectOpts);\r\n        const fakeSocket = this.incrementSockets(name);\r\n        Promise.resolve()\r\n            .then(() => this.connect(req, connectOpts))\r\n            .then((socket) => {\r\n            this.decrementSockets(name, fakeSocket);\r\n            if (socket instanceof http.Agent) {\r\n                try {\r\n                    // @ts-expect-error `addRequest()` isn't defined in `@types/node`\r\n                    return socket.addRequest(req, connectOpts);\r\n                }\r\n                catch (err) {\r\n                    return cb(err);\r\n                }\r\n            }\r\n            this[INTERNAL].currentSocket = socket;\r\n            // @ts-expect-error `createSocket()` isn't defined in `@types/node`\r\n            super.createSocket(req, options, cb);\r\n        }, (err) => {\r\n            this.decrementSockets(name, fakeSocket);\r\n            cb(err);\r\n        });\r\n    }\r\n    createConnection() {\r\n        const socket = this[INTERNAL].currentSocket;\r\n        this[INTERNAL].currentSocket = undefined;\r\n        if (!socket) {\r\n            throw new Error('No socket was returned in the `connect()` function');\r\n        }\r\n        return socket;\r\n    }\r\n    get defaultPort() {\r\n        return (this[INTERNAL].defaultPort ??\r\n            (this.protocol === 'https:' ? 443 : 80));\r\n    }\r\n    set defaultPort(v) {\r\n        if (this[INTERNAL]) {\r\n            this[INTERNAL].defaultPort = v;\r\n        }\r\n    }\r\n    get protocol() {\r\n        return (this[INTERNAL].protocol ??\r\n            (this.isSecureEndpoint() ? 'https:' : 'http:'));\r\n    }\r\n    set protocol(v) {\r\n        if (this[INTERNAL]) {\r\n            this[INTERNAL].protocol = v;\r\n        }\r\n    }\r\n}\r\nexports.Agent = Agent;\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/agent-base/dist/index.js\n");

/***/ })

};
;