"use strict";(()=>{var e={};e.id=706,e.ids=[706],e.modules={1720:e=>{e.exports=require("@google-cloud/text-to-speech")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9175:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>R,requestAsyncStorage:()=>E,routeModule:()=>l,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h});var o={};r.r(o),r.d(o,{POST:()=>p});var s=r(9303),n=r(8716),i=r(670),a=r(7070),u=r(1720),c=r(3799);(0,r(4333).s)();let d=new u.TextToSpeechClient;async function p(e){try{let{text:t,languageCode:r="da-DK"}=await e.json();if(!t)return a.NextResponse.json({error:"Text is required"},{status:400});let[o]=await d.synthesizeSpeech({input:{text:t},voice:{languageCode:r},audioConfig:{audioEncoding:"MP3"}});if(!o.audioContent)throw Error("No audio content received from TTS service");return new a.NextResponse(o.audioContent,{headers:{"Content-Type":"audio/mp3"}})}catch(e){return(0,c.zG)(e)}}let l=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/tts/route",pathname:"/api/tts",filename:"route",bundlePath:"app/api/tts/route"},resolvedPagePath:"C:\\Users\\aliso\\danish-buddy\\src\\app\\api\\tts\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:E,staticGenerationAsyncStorage:h,serverHooks:v}=l,x="/api/tts/route";function R(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}},3799:(e,t,r)=>{r.d(t,{zG:()=>n});var o=r(7070);class s extends Error{constructor(e,t,r){super(e),this.code=t,this.details=r,this.name="SpeechServiceError"}}function n(e){return e instanceof s?o.NextResponse.json({error:e.message,code:e.code},{status:500}):e instanceof Error?o.NextResponse.json({error:"Internal Server Error",code:"INTERNAL_ERROR",details:void 0},{status:500}):o.NextResponse.json({error:"Unknown Error",code:"UNKNOWN_ERROR"},{status:500})}},4333:(e,t,r)=>{r.d(t,{s:()=>s});class o extends Error{constructor(e,t=500,r){super(e),this.statusCode=t,this.details=r,this.name="APIError"}}function s(){let e=["OPENAI_API_KEY","GOOGLE_PROJECT_ID","GOOGLE_CLIENT_EMAIL","GOOGLE_PRIVATE_KEY"];console.log("Environment variables check:"),e.forEach(e=>{console.log(`${e}: ${process.env[e]?"Present":"Missing"}`)});let t=e.filter(e=>!process.env[e]);if(t.length>0)throw new o(`Missing required environment variables: ${t.join(", ")}`,500,{missingVars:t});if(!process.env.GOOGLE_PRIVATE_KEY?.includes("-----BEGIN PRIVATE KEY-----"))throw new o("Invalid Google Cloud private key format",500,{privateKey:process.env.GOOGLE_PRIVATE_KEY?"Present but invalid format":"Missing"})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[948,972],()=>r(9175));module.exports=o})();